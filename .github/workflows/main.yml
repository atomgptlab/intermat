name: InterMat github action
on: [push, pull_request]

jobs:
  miniconda:
    name: Miniconda ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
        matrix:
            os: ["ubuntu-latest"]
    steps:
      - uses: actions/checkout@v2
      - uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: test
          environment-file: environment.yml
          python-version: "3.10"
          auto-activate-base: false
      - shell: bash -l {0}
        run: |
          conda info
          conda list
      - name: Lint
        shell: bash -l {0}
        run: |
            conda install flake8 pycodestyle pydocstyle
            flake8 --ignore E203,W503 --exclude=examples,tests,scripts --statistics --count --exit-zero intermat/calculators.py intermat/generate.py 
            #pycodestyle --ignore E203,W503 --exclude=examples,tests,scripts intermat
            #pydocstyle --match-dir=core --match-dir=io --match-dir=io --match-dir=ai --match-dir=analysis --match-dir=db --match-dir=tasks --count intermat
      
      - name: Run pytest
        shell: bash -l {0}
        run: |
            #source ~/.bashrc
            find . -type f > before_test_files.txt
            conda env create -f environment.yml
            conda activate my_intermat
            conda install pytest coverage codecov pandas numpy matplotlib phonopy scikit-learn jarvis-tools --quiet
            export DGLBACKEND=pytorch
            export CUDA_VISIBLE_DEVICES="-1"
            pip install phonopy flake8 pytest pycodestyle pydocstyle codecov pytest-cov coverage
            python setup.py develop
            echo 'environment.yml'
            conda env export
            coverage run -m pytest
            coverage report -m -i
            codecov
            #codecov --token="85bd9c5d-9e55-4f6d-bd69-350ee5e3bb41"
            
            #train_alignn.py -h 
            #echo 'Pre-trained models'
            #pretrained.py -h
            #find . -type f > after_test_files.txt
            



